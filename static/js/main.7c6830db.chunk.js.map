{"version":3,"sources":["icons/delete.svg","icons/checked.svg","actions/index.js","constants/ActionTypes.js","components/TaskForm.js","components/Search.js","components/Sort.js","components/Control.js","components/TaskItem.js","components/TaskList.js","App.js","serviceWorker.js","reducers/tasks.js","reducers/isDisplayForm.js","reducers/taskEditing.js","reducers/search.js","reducers/sort.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","editTask","task","type","TaskForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","event","_event$target","target","name","value","setState","state","defineProperty","submitForm","preventDefault","title","onSave","onReset","closeForm","status","onFillTaskEditing","_this$props$taskEditi","taskEditing","id","prevProps","_this$state","react_default","a","createElement","className","Toast","ToastHeader","src","deleteIcon","onClick","alt","ToastBody","Form","onSubmit","Input","placeholder","Button","color","Component","connect","dispatch","actions","Search","search","onSearch","onSearchTask","InputGroup","InputGroupAddon","addonType","Sort","onSortTask","_this2","UncontrolledButtonDropdown","DropdownToggle","caret","DropdownMenu","map","style","index","DropdownItem","key","divider","onSort","checkIcon","Control","Row","Col","md","components_Search","components_Sort","TaskItem","onChangeStatus","onDeleteTask","onEditTask","openForm","_this$props","scope","Badge","TaskList","filterTitle","filterStatus","tasks","sort","filter","toLowerCase","indexOf","filterStatusBoleen","b","nameA","nameB","Table","hover","components_TaskItem","App","onToogleForm","onClearTask","isDisplayForm","Container","components_TaskForm","components_Control","components_TaskList","Boolean","window","location","hostname","match","data","JSON","parse","localStorage","getItem","initialState","arguments","length","undefined","action","findIndex","push","objectSpread","uuid","setItem","stringify","toConsumableArray","splice","reducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7c6830db.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/delete.93998245.svg\";","module.exports = __webpack_public_path__ + \"static/media/checked.e66fc63d.svg\";","import * as types from '../constants/ActionTypes';\r\n\r\nexport const listAll = () => {\r\n  return {\r\n    type: types.LIST_ALL\r\n  }\r\n};\r\n\r\nexport const saveTask = task => {\r\n  return {\r\n    type: types.SAVE_TASK,\r\n    task\r\n  }\r\n}\r\n\r\nexport const toogleForm = () => {\r\n  return {\r\n    type: types.TOOGLE_FORM\r\n  }\r\n}\r\n\r\nexport const openForm = () => {\r\n  return {\r\n    type: types.OPEN_FORM\r\n  }\r\n}\r\n\r\nexport const closeForm = () => {\r\n  return {\r\n    type: types.CLOSE_FORM\r\n  }\r\n}\r\n\r\nexport const changeStatus = id => {\r\n  return {\r\n    type: types.CHANGE_STATUS,\r\n    id\r\n  }\r\n}\r\n\r\nexport const deleteTask = id => {\r\n  return {\r\n    type: types.DELETE_TASK,\r\n    id\r\n  }\r\n}\r\n\r\nexport const editTask = task => {\r\n  return {\r\n    type: types.EDIT_TASK,\r\n    task\r\n  }\r\n}\r\n\r\nexport const searchTask = search => {\r\n  return {\r\n    type: types.SEARCH_TASK,\r\n    search\r\n  }\r\n}\r\n\r\nexport const sortTask = value => {\r\n  return {\r\n    type: types.SORT_TASK,\r\n    value\r\n  }\r\n}","export const LIST_ALL = 'LIST_ALL';\r\nexport const SAVE_TASK = 'SAVE_TASK';\r\nexport const TOOGLE_FORM = 'TOOGLE_FORM';\r\nexport const OPEN_FORM = 'OPEN_FORM';\r\nexport const CLOSE_FORM = 'CLOSE_FORM';\r\nexport const CHANGE_STATUS = 'CHANGE_STATUS';\r\nexport const DELETE_TASK = 'DELETE_TASK';\r\nexport const EDIT_TASK = 'EDIT_TASK';\r\nexport const SEARCH_TASK = 'SEARCH_TASK';\r\nexport const SORT_TASK = 'SORT_TASK';","import React, { Component } from 'react';\r\nimport { Form, Input, Toast, ToastBody, ToastHeader, Button } from 'reactstrap';\r\nimport deleteIcon from '../icons/delete.svg';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions/index';\r\n\r\nclass TaskForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: '',\r\n      title: '',\r\n      status: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if(this.props.taskEditing) {\r\n      this.onFillTaskEditing();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.taskEditing !== this.props.taskEditing) {\r\n      this.onFillTaskEditing();\r\n    }\r\n  }\r\n\r\n  onChange = event => {\r\n    let { name, value } = event.target;\r\n    if(name === 'status') {\r\n      value = value === 'true' ? true : false\r\n    }\r\n    this.setState(state => {\r\n      return {\r\n        [name]: value \r\n      }\r\n    });\r\n  }\r\n\r\n  submitForm = event => {\r\n    event.preventDefault();\r\n    if(this.state.title) {\r\n      this.props.onSave(this.state);\r\n      this.onReset();\r\n      this.props.closeForm();\r\n    }\r\n  }\r\n\r\n  onReset = () => {\r\n    this.setState(state => {\r\n      return {\r\n        title: '',\r\n        status: false\r\n      }\r\n    })\r\n  }\r\n\r\n  onFillTaskEditing = () => {\r\n    const { id, title, status } = this.props.taskEditing;\r\n    this.setState({\r\n      id,\r\n      title,\r\n      status\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    const { closeForm } = this.props;\r\n    const { title, status, id } = this.state;\r\n    return (\r\n      <div className=\"TaskForm\">\r\n        <Toast>\r\n          <ToastHeader>\r\n            { id ? 'Cập Nhật Công Việc' : 'Thêm Công Việc' } \r\n            <img src={deleteIcon} className=\"delete-icon\" onClick={closeForm} alt=\"\"/>\r\n          </ToastHeader>\r\n          <ToastBody>\r\n            <Form onSubmit={this.submitForm}>\r\n              <Input \r\n                className=\"input-form\" \r\n                placeholder=\"Nhập tên công việc\" \r\n                name=\"title\" \r\n                onChange={this.onChange} \r\n                value={title} />\r\n              <Input \r\n                className=\"input-form\" \r\n                type=\"select\" \r\n                name=\"status\" \r\n                onChange={this.onChange} \r\n                value={status}>\r\n                <option value={true}>Kích Hoạt</option>\r\n                <option value={false}>Ẩn</option>\r\n              </Input>\r\n              <span className=\"button-form\">\r\n                <Button color=\"primary\">Lưu Lại</Button>&nbsp;\r\n                <Button onClick={this.onReset} color=\"warning\">Hủy Bỏ</Button>\r\n              </span>\r\n            </Form>\r\n          </ToastBody>\r\n        </Toast>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProp = state => {\r\n  return {\r\n    taskEditing: state.taskEditing\r\n  }\r\n}\r\n\r\nconst mapDispatchToProp = (dispatch, props) => {\r\n  return {\r\n    onSave: task => dispatch(actions.saveTask(task)),\r\n    closeForm: () => dispatch(actions.closeForm())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProp, mapDispatchToProp)(TaskForm);\r\n","import React, { Component } from 'react';\r\nimport { InputGroup, InputGroupAddon, Input, Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions/index';\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      search: ''\r\n    }\r\n  }\r\n\r\n  onChange = event => {\r\n    this.setState({\r\n      search: event.target.value\r\n    })\r\n  }\r\n\r\n  onSearch = () => {\r\n    this.props.onSearchTask(this.state.search);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Search\">\r\n        <InputGroup>\r\n          <Input placeholder=\"Nhập từ khóa...\" onChange={this.onChange}/>\r\n          <InputGroupAddon addonType=\"append\">\r\n          <Button color=\"primary\" onClick={this.onSearch}>Tìm</Button>\r\n          </InputGroupAddon>\r\n        </InputGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, state) => {\r\n  return {\r\n    onSearchTask: value => dispatch(actions.searchTask(value))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Search);\r\n","import React, { Component } from 'react';\r\nimport { UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap';\r\nimport checkIcon from '../icons/checked.svg';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions/index';\r\n\r\nclass Sort extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: 'a-z'\r\n    }\r\n  }\r\n  onSort(value) {\r\n    this.setState({\r\n      value: value\r\n    });\r\n    this.props.onSortTask(value);\r\n  }\r\n\r\n  render() {\r\n    const sortStyles = [\r\n      { name: 'Tên A-Z', value: 'a-z'},\r\n      { name: 'Tên Z-A', value: 'z-a'},\r\n      { name: 'divider'},\r\n      { name: 'Trạng Thái Kích Hoạt', value: 'kh'},\r\n      { name: 'Trạng Thái Ẩn', value: 'an'}\r\n    ]\r\n    return (\r\n      <div className=\"Sort\">\r\n        <UncontrolledButtonDropdown>\r\n          <DropdownToggle caret color=\"primary\">\r\n            Sắp Xếp\r\n          </DropdownToggle>\r\n          <DropdownMenu>\r\n            { sortStyles.map((style, index) => {\r\n                if(style.name === 'divider') {\r\n                  return <DropdownItem key={index} divider />\r\n                } else {\r\n                  return <DropdownItem key={index} onClick={() => this.onSort(style.value)}>\r\n                            <span>{style.name}</span> \r\n                            { style.value === this.state.value ? <img src={checkIcon} className=\"check-icon\" alt=\"check\" /> : '' }\r\n                          </DropdownItem> \r\n                }\r\n              })\r\n            }\r\n          </DropdownMenu>\r\n        </UncontrolledButtonDropdown>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, state) => {\r\n  return {\r\n    onSortTask: value => dispatch(actions.sortTask(value))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Sort);\r\n","import React, { Component } from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nimport Search from './Search';\r\nimport Sort from './Sort';\r\n\r\nclass Control extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Control\">\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <Search />\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <Sort />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Control;\r\n","import React, { Component } from 'react';\r\nimport { Badge, Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions/index';\r\n\r\nclass TaskItem extends Component {\r\n  onChangeStatus = id => {\r\n    this.props.onChangeStatus(id);\r\n  }\r\n\r\n  onDeleteTask = id => {\r\n    this.props.onDeleteTask(id);\r\n    this.props.closeForm();\r\n  }\r\n\r\n  onEditTask = task => {\r\n    this.props.openForm();\r\n    this.props.onEditTask(task);\r\n  }\r\n\r\n  render() {\r\n    const { task, index } = this.props;\r\n    return (\r\n      <tr>\r\n        <th scope=\"row\">{index}</th>\r\n        <td className=\"none-center\">{task.title}</td>\r\n        <td><Badge onClick={() => this.onChangeStatus(task.id)} color={task.status ? \"danger\" : \"secondary\" }>{task.status ? 'Kích Hoạt' : 'Ẩn'}</Badge></td>\r\n        <td>\r\n          <Button onClick={() => this.onEditTask(task)} color=\"warning\">Sửa</Button>{' '}\r\n          <Button onClick={() => this.onDeleteTask(task.id)} color=\"danger\">Xóa</Button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    onChangeStatus: id => dispatch(actions.changeStatus(id)),\r\n    onDeleteTask: id => dispatch(actions.deleteTask(id)),\r\n    onEditTask: task => dispatch(actions.editTask(task)),\r\n    closeForm: () => dispatch(actions.closeForm()),\r\n    openForm: () => dispatch(actions.openForm())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(TaskItem);\r\n","import React, { Component } from 'react';\r\nimport { Table, Input } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport TaskItem from './TaskItem';\r\n\r\nclass TaskList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filterTitle: '',\r\n      filterStatus: 0\r\n    }\r\n  }\r\n\r\n  onChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState(state => {\r\n      return {\r\n        [name]: value\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let { tasks, search, sort } = this.props;\r\n    const { filterTitle, filterStatus } = this.state;\r\n\r\n    // filter\r\n    tasks = tasks.filter(task => task.title.toLowerCase().indexOf(filterTitle.toLowerCase()) !== -1);\r\n\r\n    const filterStatusBoleen = filterStatus === '1' ? true : filterStatus === '-1' ? false : 0;\r\n    if(filterStatusBoleen !== 0) {\r\n      tasks = tasks.filter(task => task.status === filterStatusBoleen);\r\n    };\r\n\r\n    // search\r\n    tasks = tasks.filter(task => task.title.toLowerCase().indexOf(search.toLowerCase()) !== -1);\r\n\r\n    // sort\r\n    tasks.sort((a, b) => {\r\n      const nameA = a.title.toLowerCase();\r\n      const nameB = b.title.toLowerCase();\r\n      switch (sort) {\r\n        case 'a-z': return nameA > nameB ? 1 : nameA < nameB ? -1 : 0;\r\n        case 'z-a': return nameA > nameB ? -1 : nameA < nameB ? 1 : 0;\r\n        case 'kh': return b.status - a.status;\r\n        case 'an': return a.status - b.status;\r\n        default: return tasks;\r\n      }\r\n    })\r\n\r\n    return (\r\n      <div className=\"TaskList\">\r\n        <Table hover>\r\n          <thead>\r\n            <tr>\r\n              <th>STT</th>\r\n              <th>Tên</th>\r\n              <th>Trạng Thái</th>\r\n              <th>Hoạt Động</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"row\"></th>\r\n              <td><Input type=\"text\" \r\n                    onChange={this.onChange}\r\n                    name=\"filterTitle\"\r\n                    value={filterTitle}\r\n                    /></td>\r\n              <td>\r\n                <Input type=\"select\" name=\"filterStatus\" value={filterStatus} onChange={this.onChange}>\r\n                  <option value={0}>Tất Cả</option>\r\n                  <option value={1}>Kích Hoạt</option>\r\n                  <option value={-1}>Ẩn</option>\r\n                </Input>\r\n              </td>\r\n              <td></td>\r\n            </tr>\r\n            {\r\n              tasks.map((task, index) => \r\n              <TaskItem \r\n                key={index} \r\n                task={task} \r\n                index={index + 1}\r\n                />)\r\n            }\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tasks: state.tasks,\r\n    search: state.search,\r\n    sort: state.sort\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(TaskList);\r\n","import React, { Component } from 'react';\nimport { Container, Row, Col, Button } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index';\n\nimport TaskForm from './components/TaskForm';\nimport Control from './components/Control';\nimport TaskList from './components/TaskList';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n\n  onToogleForm = () => {\n    const { taskEditing, openForm, onToogleForm, onClearTask } = this.props;\n    if(taskEditing.id !== '') {\n      openForm();\n    } else {\n      onToogleForm();\n    };\n    onClearTask({\n      id: '',\n      title: '',\n      status: false\n    });\n  }\n\n  render() {\n    const { isDisplayForm } = this.props;\n    return (\n      <div className=\"App\">\n        <Container>\n          <h1>Quản Lý Công Việc</h1>\n          <Row>\n            {\n              isDisplayForm &&\n              <Col md=\"4\">\n                <TaskForm />\n              </Col>\n            }\n            <Col className={ isDisplayForm ? \"md-8\" : \"md-12\" }>\n              <Row>\n                <Col md=\"4\">\n                  <Button color=\"primary\" onClick={this.onToogleForm}>Thêm Công Việc</Button>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <Control />\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <TaskList />\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isDisplayForm: state.isDisplayForm,\n    taskEditing: state.taskEditing\n  }\n}\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onToogleForm: () => dispatch(actions.toogleForm()),\n    openForm: () => dispatch(actions.openForm()),\n    onClearTask: task => dispatch(actions.editTask(task))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as types from '../constants/ActionTypes';\r\nimport uuid from 'uuid/v4';\r\n\r\nconst data = JSON.parse(localStorage.getItem('tasks'));\r\nconst initialState = data ? data : [];\r\n\r\nconst tasks = (state = initialState, action) => {\r\n  let index = -1;\r\n  switch(action.type) {\r\n    case types.LIST_ALL:\r\n      return state;\r\n    // add new task & edit task\r\n    case types.SAVE_TASK:\r\n      if(action.task.id) {\r\n        index = state.findIndex(task => task.id === action.task.id);\r\n        state[index] = action.task;\r\n      } else {\r\n        state.push({ \r\n          ...action.task, \r\n          id: uuid()\r\n        });\r\n      }\r\n      localStorage.setItem('tasks', JSON.stringify(state));\r\n      return [...state];\r\n    // change status\r\n    case types.CHANGE_STATUS:\r\n      index = state.findIndex(task => task.id === action.id);\r\n      state[index] = {\r\n        ...state[index],\r\n        status: !state[index].status\r\n      };\r\n      localStorage.setItem('tasks', JSON.stringify(state));\r\n      return [...state];\r\n    // delete task\r\n    case types.DELETE_TASK:\r\n      index = state.findIndex(task => task.id === action.id);\r\n      state.splice(index, 1);\r\n      localStorage.setItem('tasks', JSON.stringify(state));\r\n      return [...state];\r\n\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default tasks;","import * as types from '../constants/ActionTypes';\r\n\r\nconst initialState = false;\r\n\r\nconst isDisplayForm = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case types.TOOGLE_FORM: \r\n      return !state;\r\n    case types.OPEN_FORM: \r\n      return true;\r\n    case types.CLOSE_FORM: \r\n      return false;\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default isDisplayForm;","import * as types from '../constants/ActionTypes';\r\n\r\nconst initialState = {\r\n  id: '',\r\n  title: '',\r\n  status: false\r\n};\r\n\r\nconst taskEditing = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case types.EDIT_TASK:\r\n      return {...action.task};\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default taskEditing;","import * as types from '../constants/ActionTypes';\r\n\r\nconst initialState = '';\r\n\r\nconst search = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case types.SEARCH_TASK:\r\n      state = action.search;\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default search;","import * as types from '../constants/ActionTypes';\r\n\r\nconst initialState = '';\r\n\r\nconst sort = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.SORT_TASK:\r\n      return action.value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default sort;","import { combineReducers } from 'redux';\r\nimport tasks from './tasks';\r\nimport isDisplayForm from './isDisplayForm';\r\nimport taskEditing from './taskEditing';\r\nimport search from './search';\r\nimport sort from './sort';\r\n\r\nconst reducer = combineReducers({\r\n  tasks,\r\n  isDisplayForm,\r\n  taskEditing,\r\n  search,\r\n  sort\r\n});\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport reducer from './reducers/index';\nimport { Provider } from 'react-redux';\n\nlet store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}